====== AidView Backend Database ======
/* Please provide a brief description of the tool, and upload a screenshot if possible. Include details of the tool creator. */

AidView is powered by an eXist XML database and set of scripts written by [[https://twitter.com/kitwallace|Chris Wallace]]. These are working notes on the process of trying to set up a copy of the database. The backend powers the [[API|AidView API]] and [[Start|AidView application]].

===== Documentation =====

Source code available on [[https://github.com/aidinfolabs/AidView-API|GitHub]].

==== Set up server with eXist ====

Starting with a [[http://www.turnkeylinux.org/core|Turnkey Linux Core image]]. (Mine = root / existpass)

Install open-jdk

  apt-get install openjdk-6-jre
  apt-get install openjdk-6-jdk

Fetch latest stable version of eXist from http://exist-db.org/exist/download.xml and follow the [[http://exist-db.org/exist/quickstart.xml#installation|installation instructions]]. Then run the command line installation (your version number may vary...)

  java -jar eXist-setup-1.4.2-rev16251.jar -p /root/eXist


==== Running eXist ====
Check that eXist is installed and will run by changing to the eXist bin directory and running startup.sh

  cd /root/eXist/bin
  ./startup.sh

By default this launches a server bound to localhost, so to access I tunnel to the server

  ssh -f root@[servername] -L 8080:localhost:8080 -N
  
I can how access eXist at http://localhost:8080

Log-in to the admin interface at http://localhost:8080/exist/admin/ to set a password (user management).

==== Configuring eXist ====
(These instructions are for eXist version 2)

The IATI Backend Database scripts require some additional modules to be enabled in eXist. To enable the modules:

  * Stop your running copy of eXist
  * Change to the eXist extensions directory

  cd /root/eXist/extensions

  * Copy ''build.properties'' to ''local.build.properties'' and then edit it to change the line for include.module.scheduler to 'true'

  cp build.properties local.build.properties
  nano local.build.properties

  # Scheduler module
  include.module.scheduler = true

  * Change to the eXist root, create the build/classes directory if it doesn't exist, and then run ./build.sh extension-modules

  cd /root/eXist
  mkdir build/classes
  ./build.sh extension-modules

  * Then edit the conf.xml file to make sure the following modules are enabled:

<code xml | Exist Version 2.0 Modules>
<!-- XSL functions -->
            <module uri="http://www.w3.org/1999/XSL/Transform" class="org.exist.xslt.functions.XSLModule" />
            <module uri="http://exist-db.org/xquery/file" class="org.exist.xquery.modules.file.FileModule" />
            <!-- Compression module-->
            <module uri="http://exist-db.org/xquery/compression" class="org.exist.xquery.modules.compression.CompressionModule" />
            <!-- XSL functions -->
            <module uri="http://www.w3.org/1999/XSL/Transform" class="org.exist.xslt.functions.XSLModule" />
            <!-- XQDoc module: required for generating function documentation -->
            <module uri="http://exist-db.org/xquery/xqdoc" class="org.exist.xqdoc.xquery.XQDocModule" />
       <!-- included optional modules -->
            <module uri="http://exist-db.org/xquery/datetime"           class="org.exist.xquery.modules.datetime.DateTimeModule" />
            <module uri="http://exist-db.org/xquery/httpclient"         class="org.exist.xquery.modules.httpclient.HTTPClientModule" />
            <module uri="http://exist-db.org/xquery/math"               class="org.exist.xquery.modules.math.MathModule" />
            <module uri="http://exist-db.org/xquery/scheduler"          class="org.exist.xquery.modules.scheduler.SchedulerModule" /></code>

  * Restart eXist
==== Install the applications ====

=== via Restore client ===

(For this you will also need to install eXist on your local computer following the instructions on the eXist website, and then launch the client program.)

  * Start the eXist admin client.
  * Restore the data from the unzipped backup by selecting the __contents__.xml file in the root of the backup, in this case you will find this at PATH_TO_BACKUP/aidinfolabs-AidView-API-backup.201206231718/db/__contents__.xml. In the restore dialogue you will need to select 'Files of Type' as '__contents__.xml files' in order to make the file visible.
  * At the prompt enter username 'admin' and no password. The database will then restore.

=== or Via WebDav ===

To access the server via [[http://demo.exist-db.org:8098/exist/webdav.xml#macosx|WebDav]] on Mac Finder, use Go -> Connect to Server and connect to ''http://localhost:8080/exist/webdav/db'' with the username admin, and password you just set.

Connected via WebDav, copy the source to /db/

Then visit: http://localhost:8080/exist/rest/db/apps/iati/xquery/data.xq to access the public homepage.

<note warning>At this point I get stuck...</note>

  * We made need alternative set-up. Something to try later...
==== Import data ====




===== Links, source code and development plans =====
/* Please provide links to any source code, additional resources, or development plans*/

[[https://github.com/aidinfolabs/AidView-API]]