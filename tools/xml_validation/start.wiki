===== XML Validation =====

==== xmllint ====
[[http://xmlsoft.org/xmllint.html|xmllint]] is a command line tool that can be used to check xml files for validation against the IATI Standard xml schemas.

=== Examples ===
Test an xml file against a schema  
  
  xmllint --noout --schema  http://iatistandard.org/downloads/iati-activities-schema.xsd some_data_file.xml
  xmllint --noout --schema  http://iatistandard.org/downloads/iati-organisations-schema.xsd some_data_file.xml
  
To send the errors to a file

  xmllint --noout --schema  http://iatistandard.org/downloads/iati-activities-schema.xsd some_data_file.xml 2> errors.txt
  
To make an XML file more readable in your text editor:

  xmllint --format --recover input_file.xml > output_file.xml
 

==== IATI Public Validator ====
/* Please provide a brief description of the tool, and upload a screenshot if possible. Include details of the tool creator. */
This is a PHP application that can be run on a web-server to run checks over single files or pasted code. \\
Files can be uploaded or pulled from a URL \\
The application parses XML files into memory before running routines so can be quite memory intensive.\\
Creator: [[community:user:caprenter]]

=== Detailed Description ===
/* Provide additional details here */

=== Documentation ===
/* Provide links to documentation, or use the wiki to develop documentation of this tool. */
Available from the repository. See below.

=== Links, source code and development plans ===
/* Please provide links to any source code, additional resources, or development plans*/
https://github.com/caprenter/IATI-Public_Validator

==== Validate all files in a directory using PHP ====
The following code will supply you with 2 arrays of files that validate or fail validation
Using the DOM loads the full file into memory, so large files might take time (but not that much!)

<code>
$dir = "";//The directory with your files in. A relative path should work 
$good_files =  $invalid_files = array();

if ($handle = opendir($dir)) {
          /* This is the correct way to loop over the directory. */
          while (false !== ($file = readdir($handle))) {
              if ($file != "." && $file != "..") { //ignore these system files
                  
                  //Load the XML into the DOM
                  $xml = new DOMDocument();
                  $xml->load($dir . $file);
                  
                  //Check to see if it is an organisation or activity file ans select the appropriate schema                  
                  if ($xml->getElementsByTagName("iati-organisation")->length == 0) {
                    $xsd = "http://iatistandard.org/downloads/iati-activities-schema.xsd";
                    if ($myinputs['org'] == "1") { //sanitized $_GET['orgs']
                      continue;
                    }
                  } else {
                    $xsd = "http://iatistandard.org/downloads/iati-organisations-schema.xsd";
                  }

                  //This is the validation bit
                  if ($xml->schemaValidate($xsd)) {
                      $good_files[] = $file; 
                      //print '<b>DOMDocument::schemaValidate() Generated Errors!</b>';
                      //if (isset($_GET['errors']) && $_GET['errors'] == "all") {
                      //  libxml_display_all_errors();
                      //} else {
                      //  libxml_display_just_files();
                      //}
                  } else {
                      $invalid_files[] = $file;
                  }
                  
                  
              }// end if file is not a system file
          } //end while
          closedir($handle);
    }
</code>